# This file is autogenerated by maturin v1.5.0
# To update, run
#
#    maturin generate-ci github
#
name: wheelbuild

on:
  push:
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get the release version from the tag
        if: env.VERSION == ''
        run: echo "VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Show the version
        run: |
          echo "version is: $VERSION"
      - name: Create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create $VERSION --draft --verify-tag --title $VERSION
    outputs:
      version: ${{ env.VERSION }}

  linux:
    runs-on: ubuntu-latest
    needs: ["create-release"]

    strategy:
      matrix:
        #target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
        target: [x86_64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --manifest-path py-otl/Cargo.toml --out dist --find-interpreter
          sccache: "true"
          manylinux:
            auto
            # - name: Upload wheels
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: wheels-linux-${{ matrix.target }}
            #     path:
            #       dist

      - name: Upload release archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          version="${{ needs.create-release.outputs.version }}"
          gh release upload "$version" dist/otl-*



            #windows:
            #  runs-on: windows-latest
            #  strategy:
            #    matrix:
            #      target: [x64, x86]
            #  steps:
            #    - uses: actions/checkout@v4
            #    - uses: actions/setup-python@v5
            #      with:
            #        python-version: '3.10'
            #        architecture: ${{ matrix.target }}
            #    - name: Build wheels
            #      uses: PyO3/maturin-action@v1
            #      with:
            #        target: ${{ matrix.target }}
            #        args: --release --out dist --find-interpreter
            #        sccache: 'true'
            #    - name: Upload wheels
            #      uses: actions/upload-artifact@v4
            #      with:
            #        name: wheels-windows-${{ matrix.target }}
            #        path: dist

  macos:
    runs-on: macos-latest
    needs: ["create-release"]
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "26.1"
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --manifest-path py-otl/Cargo.toml --out dist --find-interpreter
          sccache:
            "true"
            #- name: Upload wheels
            #  uses: actions/upload-artifact@v4
            #  with:
            #    name: wheels-macos-${{ matrix.target }}
            #    path: dist
      - name: Upload release archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          version="${{ needs.create-release.outputs.version }}"
          gh release upload "$version" dist/otl-*

          #  sdist:
          #    runs-on: ubuntu-latest
          #    steps:
          #      - uses: actions/checkout@v4
          #      - name: Build sdist
          #        uses: PyO3/maturin-action@v1
          #        with:
          #          command: sdist
          #          args: --out dist
          #      - name: Upload sdist
          #        uses: actions/upload-artifact@v4
          #        with:
          #          name: wheels-sdist
          #          path:
          #            dist
          #
          #            #  release:
          #            #    name: Release
          #            #    runs-on: ubuntu-latest
          #            #    if: "startsWith(github.ref, 'refs/tags/')"
          #            #    needs: [linux, macos, sdist]
          #            #    steps:
          #            #      - uses: actions/download-artifact@v4
          #            #      - name: Publish to PyPI
          #            #        uses: PyO3/maturin-action@v1
          #            #        env:
          #            #          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
          #            #        with:
          #            #          command: upload
          #            #          args: --non-interactive --skip-existing wheels-*/*
